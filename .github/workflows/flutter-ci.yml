name: Flutter CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  analyze:
    name: 代码分析
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@5126516654c75f76bca1de45dd82a3006d8890f9 # v4.1.1
        
      - name: 设置Flutter环境
        uses: subosito/flutter-action@1c5eb12d812966ca84680edc38353a0851c8fd56 # v2.14.0
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
          
      - name: 缓存Pub依赖
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
          
      - name: 获取依赖
        run: flutter pub get
        
      - name: 自动修复插件问题
        run: |
          FLUTTER_LOCAL_NOTIFICATIONS_PATH=$(find ~/.pub-cache -name "FlutterLocalNotificationsPlugin.java" | grep -v mirror | head -n 1)
          if [ -n "$FLUTTER_LOCAL_NOTIFICATIONS_PATH" ]; then
            echo "Patching $FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            sed -i 's/bigLargeIcon(null)/bigLargeIcon((android.graphics.Bitmap)null)/g' "$FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            echo "✅ 已修复Flutter本地通知插件"
          else
            echo "⚠️ 未找到FlutterLocalNotificationsPlugin.java文件，跳过修复"
          fi
        
      - name: 检查资源目录
        run: |
          # 确保assets目录存在
          mkdir -p assets/images
          mkdir -p assets/i18n
          mkdir -p assets/sounds
          echo "已确保所有资源目录存在"
          
      - name: 分析代码
        run: flutter analyze
  
  build-android:
    name: 构建Android应用
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@5126516654c75f76bca1de45dd82a3006d8890f9 # v4.1.1
        with:
          fetch-depth: 0  # 获取完整历史用于版本号生成

      - name: 设置Java环境
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: 设置Flutter环境
        uses: subosito/flutter-action@1c5eb12d812966ca84680edc38353a0851c8fd56 # v2.14.0
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
      
      - name: 缓存Pub依赖
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
          
      - name: 缓存Gradle
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          
      - name: 获取依赖
        run: flutter pub get
      
      - name: 自动修复插件问题
        run: |
          FLUTTER_LOCAL_NOTIFICATIONS_PATH=$(find ~/.pub-cache -name "FlutterLocalNotificationsPlugin.java" | grep -v mirror | head -n 1)
          if [ -n "$FLUTTER_LOCAL_NOTIFICATIONS_PATH" ]; then
            echo "Patching $FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            sed -i 's/bigLargeIcon(null)/bigLargeIcon((android.graphics.Bitmap)null)/g' "$FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            echo "✅ 已修复Flutter本地通知插件"
          else
            echo "⚠️ 未找到FlutterLocalNotificationsPlugin.java文件，跳过修复"
          fi
        
      - name: 检查资源目录
        run: |
          # 确保assets目录存在
          mkdir -p assets/images
          mkdir -p assets/i18n
          mkdir -p assets/sounds
          echo "已确保所有资源目录存在"
        
      - name: 获取版本号
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      - name: 构建APK
        run: |
          # 设置正确的JAVA_HOME环境变量，覆盖本地配置
          export JAVA_HOME=$JAVA_HOME_17_X64
          flutter build apk --release
        
      - name: 上传APK
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: scheduling-assistant-${{ steps.version.outputs.version }}.apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
      
      - name: 创建Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23 # v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: 排班助手 ${{ steps.version.outputs.version }}
          body: |
            排班助手 v${{ steps.version.outputs.version }} 版本发布
            
            ### 更新内容
            - 请查看提交记录了解详细变更
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-ios:
    name: 构建iOS应用
    needs: analyze
    runs-on: macos-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@5126516654c75f76bca1de45dd82a3006d8890f9 # v4.1.1
        with:
          fetch-depth: 0  # 获取完整历史用于版本号生成
        
      - name: 设置Flutter环境
        uses: subosito/flutter-action@1c5eb12d812966ca84680edc38353a0851c8fd56 # v2.14.0
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
      
      - name: 缓存Pub依赖
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
          
      - name: 获取依赖
        run: flutter pub get
      
      - name: 检查资源目录
        run: |
          # 确保assets目录存在
          mkdir -p assets/images
          mkdir -p assets/i18n
          mkdir -p assets/sounds
          echo "已确保所有资源目录存在"
      
      - name: 获取版本号
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      - name: 构建iOS
        run: |
          # 确保使用正确的Java路径
          export JAVA_HOME=$JAVA_HOME_17_X64
          flutter build ios --release --no-codesign
          
      - name: 创建IPA文件 (不包含签名)
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app-release-unsigned.ipa Payload
          
      - name: 上传IPA
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: scheduling-assistant-${{ steps.version.outputs.version }}.ipa
          path: build/ios/iphoneos/app-release-unsigned.ipa
          retention-days: 7
          
      - name: 添加IPA到Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23 # v1
        with:
          files: build/ios/iphoneos/app-release-unsigned.ipa
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 