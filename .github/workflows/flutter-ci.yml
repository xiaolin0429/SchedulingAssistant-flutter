name: Flutter CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  analyze:
    name: 代码分析
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
          
      - name: 获取依赖
        run: flutter pub get
        
      - name: 分析代码
        run: flutter analyze
  
  test:
    name: 运行测试
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      
      - name: 缓存Pub依赖
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: 获取依赖
        run: flutter pub get
        
      - name: 运行测试
        run: flutter test --coverage
  
  build-android:
    name: 构建Android应用
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史用于版本号生成

      - name: 设置Java环境
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      
      - name: 缓存Pub依赖
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: 缓存Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: 获取依赖
        run: flutter pub get
      
      - name: 获取版本号
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      - name: 构建APK
        run: flutter build apk --release
        
      - name: 上传APK
        uses: actions/upload-artifact@v3
        with:
          name: scheduling-assistant-${{ steps.version.outputs.version }}.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      
      - name: 创建Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: 排班助手 ${{ steps.version.outputs.version }}
          body: |
            排班助手 v${{ steps.version.outputs.version }} 版本发布
            
            ### 更新内容
            - 请查看提交记录了解详细变更
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-ios:
    name: 构建iOS应用
    needs: test
    runs-on: macos-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史用于版本号生成
        
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      
      - name: 缓存Pub依赖
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
          
      - name: 获取依赖
        run: flutter pub get
      
      - name: 获取版本号
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        
      - name: 构建iOS
        run: |
          flutter build ios --release --no-codesign
          
      - name: 创建IPA文件 (不包含签名)
        run: |
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app-release-unsigned.ipa Payload
          
      - name: 上传IPA
        uses: actions/upload-artifact@v3
        with:
          name: scheduling-assistant-${{ steps.version.outputs.version }}.ipa
          path: build/ios/iphoneos/app-release-unsigned.ipa
          
      - name: 添加IPA到Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/ios/iphoneos/app-release-unsigned.ipa
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 