name: Android Release

on:
  push:
    tags:
      - 'v*'

# 添加工作流权限
permissions:
  contents: write  # 允许创建Release和上传资源
  issues: write    # 允许创建和更新Issues
  pull-requests: write # 允许创建和更新PR

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@5126516654c75f76bca1de45dd82a3006d8890f9 # v4.1.1

      - name: Setup Java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@1c5eb12d812966ca84680edc38353a0851c8fd56 # v2.14.0
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
          
      - name: Setup Flutter Pub Cache
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
            
      - name: Setup Gradle Cache
        uses: actions/cache@0769f2e44373d687c841be56f618397100943c5e # v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          
      - name: Install Flutter Dependencies
        run: flutter pub get
        
      - name: Check Resource Directories
        run: |
          # 确保assets目录存在
          mkdir -p assets/images
          echo "✅ 已确保assets/images目录存在"
        
      - name: Patch Flutter Local Notifications
        run: |
          FLUTTER_LOCAL_NOTIFICATIONS_PATH=$(find ~/.pub-cache -name "FlutterLocalNotificationsPlugin.java" | grep -v mirror | head -n 1)
          if [ -n "$FLUTTER_LOCAL_NOTIFICATIONS_PATH" ]; then
            echo "Patching $FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            sed -i 's/bigLargeIcon(null)/bigLargeIcon((android.graphics.Bitmap)null)/g' "$FLUTTER_LOCAL_NOTIFICATIONS_PATH"
            echo "✅ 成功修复Flutter本地通知插件"
          else
            echo "⚠️ 未找到FlutterLocalNotificationsPlugin.java文件，跳过修复"
          fi
        
      - name: Setup Android Keystore
        run: |
          mkdir -p android/app/keys
          echo "${{ secrets.KEY_JKS }}" | base64 --decode > android/app/keys/release.jks
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=app/keys/release.jks" >> android/key.properties
          
          # 验证密钥库是否正确生成
          if [ ! -f "android/app/keys/release.jks" ]; then
            echo "::error::密钥库创建失败"
            exit 1
          fi
        
      - name: Build Android Release
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
          
      - name: Get Version
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23 # v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 排班助手 v${{ steps.version.outputs.version }} 版本发布
            
            ### 更新内容
            请查看提交记录了解详细变更。
            
            ### 下载
            - Android: 点击下方下载APK文件
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 